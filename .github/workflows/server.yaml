on:
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]
    paths:
      - "server/**"
      - "Cargo.toml"
      - ".github/workflows/server.yaml"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [ ubuntu-stable, ubuntu-beta, ubuntu-nightly ]

        include:
          - build: ubuntu-stable
            rust: stable

          - build: ubuntu-beta
            rust: beta

          - build: ubuntu-nightly
            rust: nightly

    steps:
      - uses: actions/checkout@v2

      - name: Setting up rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          components: clippy

      - name: clippy server (default feature)
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --manifest-path server/Cargo.toml -- -D warnings

  format:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [ ubuntu-stable, ubuntu-beta, ubuntu-nightly ]

        include:
          - build: ubuntu-stable
            rust: stable

          - build: ubuntu-beta
            rust: beta

          - build: ubuntu-nightly
            rust: nightly

    steps:
      - uses: actions/checkout@v2

      - name: Setting up rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt

      - name: Checking if code is formatted
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path Cargo.toml -- --check

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [ ubuntu-stable, ubuntu-beta, ubuntu-nightly ]

        include:
          - build: ubuntu-stable
            rust: stable

          - build: ubuntu-beta
            rust: beta

          - build: ubuntu-nightly
            rust: nightly

    steps:
      - uses: actions/checkout@v2

      - name: Setting up rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: test server (default feature)
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path server/Cargo.toml

  security-audit:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo bin
        uses: actions/cache@v1
        with:
          path: ~/.cargo/bin
          key: ${{ runner.os }}-cargo-audit

      - uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
